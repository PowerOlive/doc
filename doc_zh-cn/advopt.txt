高级命令:
  //compileToC, cc          编译程序到C 
  //compileToCpp, cpp       编译程序到C++ 
  //compileToOC, objc       编译程序到Objective-C 
  //js                      编译程序到Javascript
  //rst2html                将reStructuredText文件转换到HTML
  //rst2tex                 将reStructuredText文件转换到TeX
  //jsondoc                 将文档解压到JSON文件
  //buildIndex              为整个文档构建索引
  //run                     运行程序 (使用简易C后端; 超多bug!)
  //genDepend               生成一个包含模块依赖图的DOT文件
  //dump                    转储所有定义的条件和搜索路径
  //check                   检查程序的语法和语义
  //idetools                对IDE的编译器支持: 可能的选项:
    --track:FILE,LINE,COL   追踪文件/光标位置
    --trackDirty:DIRTY_FILE,ORIG_FILE,LINE,COL
                            追踪目前还没有保存到磁盘的文件
    --suggest               建议当前位置的所有可能的symbol
    --def                   列出当前位置所有可能的定义
    --context               列出可能的上下文调用
    --usages                列出当前位置symbol所有的用法
    --eval                  计算一个表达式
  //serve                   以编译服务模式运行 (CAAS)
    --server.type:TYPE      服务类型：stdin或tcp
    --server.port:PORT      TCP端口, 默认6000
    --server.address:HOST   绑定到该地址, 默认 ""

高级选项:
  -o, --out:FILE            设置输出文件名
  --stdout                  输出到stdout
  --listFullPaths           用信息列出完整路径
  -w, --warnings:on|off     开/关所有警告
  --warning[X]:on|off       开/关特定警告X
  --hints:on|off            开/关所有提示
  --hint[X]:on|off          开/关特定提示X
  --lib:PATH                设置系统库文件路径
  --import:PATH             添加一个"自动导入"的模块
  --include:PATH            添加一个"自动包含"的模块
  --nimcache:PATH           设置缓存路径
  --header:FILE             编译器应当生成头文件(文件路径可选)
  -c, --compileOnly         仅编译; 不进行汇编和链接
  --noLinking               编译但不链接
  --noMain                  不要生成一个Main过程
  --genScript               生成一个编译脚本 (在'nimcache'
                            子文件夹以'compile_$project$scriptext'命名)
  --os:SYMBOL               设定目标操作系统(交叉编译)
  --cpu:SYMBOL              设定目标处理器(交叉编译)
  --debuginfo               启用调试信息输出
  -t, --passC:OPTION        传递选项给 C 编译器
  -l, --passL:OPTION        传递选项给 链接器
  --cincludes:DIR           修改头文件搜索路径
  --clibdir:DIR             修改库文件搜索路径
  --clib:LIBNAME            链接一个附加的库
                            (你应该避免使用特定于平台的扩展)
  --genMapping              生成一个包含
                            (Nim, mangled)标识符对的映射文件
  --project                 为整个项目生成文档(doc2)
  --docSeeSrcUrl:url        为doc和doc2命令激活 'see source' 功能
                            (see doc.item.seesrc in config/nimdoc.cfg)
  --lineDir:on|off          generation of #line directive on|off
  --embedsrc                将源代码以注释嵌入到所生成的文件中
  --threadanalysis:on|off   开/关线程分析
  --tlsEmulation:on|off     开/关线程本地存储模拟
  --taintMode:on|off        开/关污染模式
  --implicitStatic:on|off   开/关隐含编译耗时评判
  --patterns:on|off         turn pattern matching on|off
  --skipCfg                 do not read the general configuration file
  --skipUserCfg             do not read the user's configuration file
  --skipParentCfg           do not read the parent dirs' configuration files
  --skipProjCfg             do not read the project's configuration file
  --gc:refc|v2|markAndSweep|boehm|none
                            select the GC to use; default is 'refc'
  --index:on|off            turn index file generation on|off
  --putenv:key=value        设置一个环境变量
  --NimblePath:PATH         add a path for Nimble support
  --noNimblePath            deactivate the Nimble path
  --excludePath:PATH        exclude a path from the list of search paths
  --dynlibOverride:SYMBOL   marks SYMBOL so that dynlib:SYMBOL
                            has no effect and can be statically linked instead;
                            symbol matching is fuzzy so
                            that --dynlibOverride:lua matches 
                            dynlib: "liblua.so.3"
  --listCmd                 list the commands used to execute external programs
  --parallelBuild:0|1|...   perform a parallel build
                            value = number of processors (0 for auto-detect)
  --verbosity:0|1|2|3       设置Nim的"啰嗦"程度 (默认值是1)
  --experimental            启用实验性语言特性
  -v, --version             显示详细的版本信息
